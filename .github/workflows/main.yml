name: Main Workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'pkg-src/**'
      - 'config.yml'
      - '.github/workflows/main.yml'
  push:
    branches:
      - main
    paths:
      - 'pkg-src/**'
      - 'config.yml'
      - '.github/workflows/main.yml'
  schedule:
    - cron: "15 4 * * *"

jobs:
  discover-packages:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Parse Packages and Config
        id: set-matrix
        run: |
          # Find all packages with both build_pkg.yml and manifest.yml
          packages=$(find pkg-src -type f -name "build_pkg.yml" -exec dirname {} \; | xargs -n1 basename | sed -z '$ s/\n$//' | jq -Rsc 'split("\n")')

          # Read the abi and arch values from config.yml
          abi_list=$(yq eval '.pkg-repo.abi' config.yml -o json | jq -c)
          arch_list=$(yq eval '.pkg-repo.arch' config.yml -o json | jq -c)

          # Create the JSON matrix
          matrix=$(jq -c -n \
            --argjson arch "$arch_list" \
            --argjson abi "$abi_list" \
            --argjson pkg_name "$packages" \
            '{arch: $arch, abi: $abi, pkg_name: $pkg_name}')
          echo "Matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-packages:
    strategy:
      matrix: ${{ fromJson(needs.discover-packages.outputs.matrix) }}
      fail-fast: false
    runs-on: ubuntu-24.04
    needs: discover-packages
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: repo
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build ${{ matrix.pkg_name }}
        env:
          ABI: ${{ matrix.abi }}
          ARCH: ${{ matrix.arch }}
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install \
            ansible-core>=2.18.1 \
            github3.py>=4.0.1
          ansible-galaxy collection install -U community.general
          ansible-playbook repo/pkg-src/${{ matrix.pkg_name }}/build_pkg.yml --force-color

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}_${{ matrix.pkg_name }}_${{ matrix.arch }}_${{ matrix.abi }}
          path: dist/*
          retention-days: 1
          compression-level: 1

  build-repo:
    if: github.event_name == 'push'
    runs-on: ubuntu-24.04
    needs: build-packages
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Building freeBSD compatible pkg repo
        run: python .github/assets/build-pkg-repo.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: artifacts/
          retention-days: 1
          compression-level: 0

  deploy-pkg-repo:
    if: github.event_name == 'push'
    runs-on: ubuntu-24.04
    needs: build-repo
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
