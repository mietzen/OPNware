name: Main Workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'pkg-src/**'
      - 'config.yml'
      - '.github/workflows/main.yml'
      - '.github/assets/*.py'
  push:
    branches:
      - main
    paths:
      - 'pkg-src/**'
      - 'config.yml'
      - '.github/workflows/main.yml'
      - '.github/assets/*.py'
  schedule:
    - cron: "15 4 * * *"

jobs:
  discover-packages:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Parse Packages and Config
        id: set-matrix
        run: |
          matrix=$(python ./.github/assets/build-matrix.py)
          echo "Matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-packages:
    strategy:
      matrix: ${{ fromJson(needs.discover-packages.outputs.matrix) }}
      fail-fast: false
    runs-on: ubuntu-24.04
    needs: discover-packages
    env:
      ABI: ${{ matrix.abi }}
      ARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Setup GO
        uses: actions/setup-go@v5
        if: ${{ matrix.go }}
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        if: ${{ matrix.node }}
        with:
          node-version: ${{ matrix.node }}

      - name: Build ${{ matrix.pkg_name }}
        env:
          ABI: ${{ matrix.abi }}
          ARCH: ${{ matrix.arch }}
          PKG_NAME: ${{ matrix.pkg_name }}
        uses: mietzen/action-ansible-playbook@v2
        with:
          playbook: build_pkg.yml
          directory: repo/pkg-src/${{ matrix.pkg_name }}/
          configuration: |
            [defaults]
            callbacks_enabled = ansible.posix.profile_tasks, ansible.posix.timer
            stdout_callback = yaml
            nocows = false
            interpreter_python = auto_silent
          inventory: |
            [local]
            localhost ansible_connection=local
          options: |
            --verbose
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_id }}_${{ matrix.pkg_name }}_${{ matrix.arch }}_${{ matrix.abi }}
          path: dist/*
          retention-days: 1
          compression-level: 1

  deploy-repo:
    if: github.event_name == 'push'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs: build-packages
    steps:
      - name: Checkout Pages Branch
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'
          path: pages

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create PKG Repository
        working-directory: ./pages
        run: |
          git reset --hard 5d0e89d6d105101c023ab7c4d4a748930ba4ec95
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          for artifact in ${GITHUB_WORKSPACE}/artifacts/*; do
            arch=$(basename "${artifact}" | cut -d'_' -f3)
            abi=$(basename "${artifact}" | cut -d'_' -f4)
            target_dir="${GITHUB_WORKSPACE}/pages/FreeBSD:${abi}:${arch}/latest/All"
            mkdir -p ${target_dir}
            mv ${artifact}/*.pkg ${target_dir}/
            cat ${artifact}/packagesite_info.json >> ${GITHUB_WORKSPACE}/pages/FreeBSD:${abi}:${arch}/latest/packagesite.yaml
            echo "" >> ${GITHUB_WORKSPACE}/pages/FreeBSD:${abi}:${arch}/latest/packagesite.yaml
          done
          tree -H . > index.html
          git add .
          git commit -m 'Deployed PKG Repo'
          git push -f
