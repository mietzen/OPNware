name: Check for and apply updates

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/update.yml'
  schedule:
    - cron: "15 4 * * *"

jobs:
  update:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: '.github/assets/requirements.txt'

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Check & Update Pkgs
        id: upgrades
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          echo "::group::Install requirements"
            pip install -r .github/assets/requirements.txt
          echo "::endgroup::"

          .github/assets/upgrade_pkgs.py | tee pr-body

          if [ -f pr-body ]; then
            echo 'pr-body<<EOF' >> $GITHUB_OUTPUT
            cat pr-body  >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
          fi
          git clean -fxd

      - name: Create Pull Request
        if: steps.upgrades.outputs.pkg_upgraded == 'true'
        id: pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.app-token.outputs.token }}
          committer: ${{ steps.app-token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>
          author: ${{ steps.app-token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>
          branch: auto-update
          title: Auto Upgrades
          labels: |
            automated pr
            update
          body: |
            ${{ steps.upgrades.outputs.pr-body }}

      - name: Enable Pull Request auto merge
        if: steps.pr.outputs.pull-request-operation == 'created'
        run: gh pr merge --merge --auto "${{ steps.pr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
