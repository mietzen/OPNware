name: Create Workflow Caller

on:
  workflow_dispatch:
  push:
    paths:
      - 'pkgs/**'

permissions:
  contents: write
  workflows: write

jobs:
  generate-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Discover Packages
        id: discover
        run: |
          # Find all packages with a build_pkg.yml and manifest.yml
          packages=$(find pkg-src -type f -name "build_pkg.yml" -exec dirname {} \; | xargs -n1 basename)
          if [ -z $packages ]; then
            echo "No packages found! $packages"
            echo "packages=''" >> $GITHUB_ENV
          else
            echo "Found packages: $packages"
            echo "packages=$packages" >> $GITHUB_ENV
          fi

      - name: Generate Workflow
        id: generate
        if: ${{ steps.discover.outputs.packages }} != ''
        env:
          PKGS: ${{ steps.discover.outputs.packages }}
        run: |
          cat <<EOF > .github/workflows/pkg_workflow_caller.yml
          name: Pkg workflow caller

          on:
            workflow_call:
              inputs:
                abi:
                  required: true
                  type: string
                arch:
                  required: true
                  type: string
                pkg_name:
                  required: true
                  type: string

          jobs:
            build:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout Code
                  uses: actions/checkout@v3
          EOF
          echo "" >> .github/workflows/pkg_workflow_caller.yml
          for pkg in ${PKGS}; do
          reusable_workflow='./.github/workflows/build_${pkg}.yml'
          cat << EOL >> .github/workflows/pkg_workflow_caller.yml
                - name: ${pkg}
                  if: inputs.pkg_name == '${pkg}'
                  uses: ${reusable_workflow}
                  with:
                    abi: ${{ inputs.abi }}
                    arch: ${{ inputs.arch }}
          EOL
          echo "" >> .github/workflows/pkg_workflow_caller.yml
          if [ ! -L ${reusable_workflow} ]; then
            ln -s ./pkg-src/${pkg}/build_pkg.yml ${reusable_workflow}
            git add ${reusable_workflow}
          fi
          done
          git add .github/workflows/pkg_workflow_caller.yml
          echo "Workflow generated."

      - name: Commit and Push Workflow
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -m "Updated package workflow caller"
          git push
