---
build_config:
  include:
    go: '1.23'
  src_repo: 'https://github.com/caddyserver/caddy'
pkg_manifest:
  name: caddy
  origin: mietzen/caddy
  version: 2.9.1
  comment: Fast and extensible multi-platform HTTP/1-2-3 web server with automatic HTTPS
  www: https://caddyserver.com/
  maintainer: github.nstein@mailbox.org
  prefix: /opt/caddy
  users:
    - caddy
  groups:
    - caddy
  licenselogic: single
  licenses:
    - Apache-2.0 license
  desc: |
    Caddy is a platform for running Go applications and serves as a highly extensible HTTPS server.
    Applications are implemented as Caddy modules, with tls and http included by default.
    It supports automated documentation, live configuration updates via API, and seamless integration with other modules.
    Configuration is primarily managed through its JSON-based API, but adapters allow the use of formats like Caddyfile, YAML, and NGINX config.
    Caddy consolidates all settings into a single configuration document, simplifying management and reducing complexity.
    Its design enables precise control over in-memory components, such as HTTP handlers and TLS.
    The plugin system allows extensive customization and improvements beyond other web servers.
    Refer to the documentation for details on configuration structure.
  scripts:
    pre-install: |
      existing_ids=$(mktemp)
      cut -d: -f3,4 /etc/passwd | tr ':' '\n' | sort -un > $existing_ids
      service_id=$(seq 300 999 | grep -vxFf $existing_ids | head -n1)
      rm $existing_ids
      echo "===> Creating user"
      if ! pw usershow caddy >/dev/null 2>&1; then
        pw adduser caddy -u $service_id -d /nonexistent -s /usr/sbin/nologin -c "caddy service user"
      else
        echo "Using existing user 'caddy'"
      fi
    post-install: |
      chown -R caddy:www /opt/caddy
      echo "===> Starting service"
      service caddy enable
      service caddy start
    pre-deinstall: |
      echo "===> Stopping service"
      service caddy stop
      service caddy disable
    post-deinstall: |
      echo "===> Deleting user"
      pw deluser caddy
pkg_service:
  template: default
  vars:
    COMMAND: /opt/caddy/caddy run --envfile /opt/caddy/.env
    SRV_CMDS: |
      reload(){
        /opt/caddy/caddy reload
      }
