---
- name: Build caddy
  hosts: localhost
  gather_facts: false
  vars:
    gh_ws: "{{ lookup('env', 'GITHUB_WORKSPACE',) }}"
    repo: "{{ lookup('env', 'SRC_REPO',) }}"
    pkg_name: 'caddy'
    caddy_plugins:
      - github.com/caddy-dns/porkbun
      - github.com/caddy-dns/ddnss
      - github.com/mietzen/caddy-dynamicdns-cmd-source
      - github.com/lucaslorentz/caddy-docker-proxy/v2
    config: '{{ gh_ws }}/repo/pkgs/{{ pkg_name }}/config.yml'
  tasks:
    - name: Install pkg-repo-tools
      ansible.builtin.pip:
        name: file://{{ gh_ws }}/repo/.github/assets

    - name: Create Directories
      ansible.builtin.file:
        path: "{{ gh_ws }}/src"
        state: directory
        recurse: true
        mode: '0755'

    - name: Get release from config
      ansible.builtin.command:
        cmd: "yq '.pkg_manifest.version' {{ config }}"
      register: latest_release
      changed_when: latest_release.rc != 0

    - name: Install xCaddy
      ansible.builtin.shell:
        cmd: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
        creates: "{{ lookup('env', 'GOBIN',) }}/xcaddy"

    - name: Build Binary
      ansible.builtin.shell:
        cmd: |
          xcaddy build v{{ latest_release.stdout }} \
              --with {{ caddy_plugins | join(' --with ') }} \
              --output $GITHUB_WORKSPACE/src
        creates: "{{ gh_ws }}/src/caddy"
      environment:
        GOOS: freebsd
        GOARCH: "{{ lookup('env', 'ARCH',) }}"

    - name: Create Directories
      ansible.builtin.file:
        path: "{{ gh_ws }}/dist/pkg/{{ item }}"
        state: directory
        recurse: true
        mode: '0755'
      loop:
        - 'opt/{{ pkg_name }}'
        - 'etc/rc.d'

    - name: Copy Binary
      ansible.builtin.copy:
        src: "{{ gh_ws }}/src/{{ pkg_name }}"
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/{{ pkg_name }}"
        remote_src: true
        mode: '0755'

    - name: Copy License
      ansible.builtin.get_url:
        url: "{{ repo }}/raw/refs/tags/v{{ latest_release.stdout }}/LICENSE"
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/LICENSE"
        mode: '0644'

    - name: Provide a link to the Source Code
      ansible.builtin.copy:
        content: |
          This software is licensed under the Apache License, Version 2.0.
          You may obtain a copy of the source code at:
          {{ repo }}/archive/refs/tags/v{{ latest_release.stdout }}.tar.gz
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/SOURCE"
        mode: '0644'

    - name: Copy Assets
      ansible.builtin.copy:
        src: "{{ gh_ws }}/repo/pkgs/{{ pkg_name }}/assets/"
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/"
        remote_src: true
        mode: '0755'

    - name: Create Service
      ansible.builtin.shell:
        cmd: |
          pkg-tool create-service {{ config }}
        chdir: "{{ gh_ws }}/dist/pkg/etc/rc.d/"
        creates: "{{ gh_ws }}/dist/pkg/etc/rc.d/{{ pkg_name }}"

    - name: Create Manifest
      ansible.builtin.shell:
        cmd: |
          pkg-tool create-manifest {{ config }} \
            --abi ${ABI} --arch ${ARCH}
        chdir: "{{ gh_ws }}/dist/"
        creates: "{{ gh_ws }}/dist/+MANIFEST"

    - name: Create PKG # noqa: command-instead-of-module
      ansible.builtin.shell: # noqa: risky-shell-pipe
        cmd: |
          tar -cf {{ pkg_name }}-{{ latest_release.stdout }}.pkg \
            --zstd \
            --owner=0 \
            --group=0 \
            --transform 's|^pkg||' \
            +COMPACT_MANIFEST +MANIFEST $(find pkg -type f)
        chdir: "{{ gh_ws }}/dist"
        creates: "{{ gh_ws }}/dist/{{ pkg_name }}-{{ latest_release.stdout }}.pkg"

    - name: Create Packagesite Info
      ansible.builtin.shell:
        cmd: |
          pkg-tool create-packagesite-info ./+COMPACT_MANIFEST
        chdir: "{{ gh_ws }}/dist"
        creates: "{{ gh_ws }}/dist/packagesite_info.json"

    - name: Remove intermediate PKG Folder
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ gh_ws }}/dist/+MANIFEST"
        - "{{ gh_ws }}/dist/+COMPACT_MANIFEST"
        - "{{ gh_ws }}/dist/pkg"
