---
- name: Build CaddyV2
  hosts: localhost
  gather_facts: false
  vars:
    gh_ws: "{{ lookup('env', 'GITHUB_WORKSPACE',) }}"
    repo: 'caddyserver/caddy'
    pkg_name: 'caddy'
    caddy_plugins:
      - github.com/caddy-dns/porkbun
      - github.com/caddy-dns/ddnss
      - github.com/mietzen/caddy-dynamicdns-cmd-source
  tasks:
    - name: Create Directories
      ansible.builtin.file:
        path: "{{ gh_ws }}/src"
        state: directory
        recurse: true
        mode: '0755'

    - name: Get latest release of a public repository
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -s https://api.github.com/repos/{{ repo }}/releases/latest | jq -r '.tag_name'
        executable: /bin/bash
      register: latest_release
      changed_when: latest_release.rc != 0

    - name: Install xCaddy
      ansible.builtin.shell:
        cmd: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
        creates: "{{ lookup('env', 'GOBIN',) }}/xcaddy"

    - name: Build Binary
      ansible.builtin.shell:
        cmd: |
          xcaddy build {{ latest_release.stdout }} \
              --with {{ caddy_plugins | join(' --with ') }} \
              --output $GITHUB_WORKSPACE/src
        creates: "{{ gh_ws }}/src/caddy"
      environment:
        GOOS: freebsd
        GOARCH: "{{ lookup('env', 'ARCH',) }}"

    - name: Create Directories
      ansible.builtin.file:
        path: "{{ gh_ws }}/dist/pkg/{{ item }}"
        state: directory
        recurse: true
        mode: '0755'
      loop:
        - 'opt/{{ pkg_name }}'
        - 'etc/rc.d'

    - name: Copy Binary
      ansible.builtin.copy:
        src: "{{ gh_ws }}/src/{{ pkg_name }}"
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/{{ pkg_name }}"
        remote_src: true
        mode: '0755'

    - name: Create Service
      ansible.builtin.shell:
        cmd: |
          python {{ gh_ws }}/repo/.github/assets/create-service.py
        chdir: "{{ gh_ws }}/dist/pkg/etc/rc.d/"
        creates: "{{ gh_ws }}/dist/pkg/etc/rc.d/{{ pkg_name }}"

    - name: Create Manifest
      ansible.builtin.shell:
        cmd: |
          python {{ gh_ws }}/repo/.github/assets/create-manifest.py
        chdir: "{{ gh_ws }}/dist/pkg"
        creates: "{{ gh_ws }}/dist/pkg/+MANIFEST"

    - name: Create PKG # noqa: command-instead-of-module
      ansible.builtin.shell:
        cmd: |
          tar --zstd -cf {{ pkg_name }}-{{ latest_release.stdout }}.pkg -C ./pkg/ .
        chdir: "{{ gh_ws }}/dist"
        creates: "{{ gh_ws }}/dist/{{ pkg_name }}-{{ latest_release.stdout }}.pkg.txz"

    - name: Copy Packagesite Info
      ansible.builtin.copy:
        src: "{{ gh_ws }}/dist/pkg/+COMPACT_MANIFEST"
        dest: "{{ gh_ws }}/dist/packagesite_info.json"
        remote_src: true
        mode: '0755'

    - name: Remove intermediate PKG Folder
      ansible.builtin.file:
        path: "{{ gh_ws }}/dist/pkg"
        state: absent
