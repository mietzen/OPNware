---
- name: Build speedtest-go
  hosts: localhost
  gather_facts: false
  vars:
    gh_ws: "{{ lookup('env', 'GITHUB_WORKSPACE',) }}"
    repo: 'showwin/speedtest-go'
    pkg_name: 'speedtest-go'
    config: '{{ gh_ws }}/repo/pkgs/{{ pkg_name }}/config.yml'
  tasks:
    - name: Create Directories
      ansible.builtin.file:
        path: "{{ gh_ws }}/dist/pkg"
        state: directory
        recurse: true
        mode: '0755'

    - name: Get latest release of a public repository
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -s https://api.github.com/repos/{{ repo }}/releases/latest | jq -r '.tag_name'
        executable: /bin/bash
      register: latest_release
      changed_when: latest_release.rc != 0

    - name: Git checkout repository
      ansible.builtin.git:
        repo: 'https://github.com/{{ repo }}.git'
        dest: "{{ gh_ws }}/src"
        version: "{{ latest_release.stdout }}"

    - name: Build Binary
      ansible.builtin.shell:
        cmd: |
          go mod tidy
          go build
        chdir: "{{ gh_ws }}/src"
        creates: "{{ gh_ws }}/src/{{ pkg_name }}"
      environment:
        GOOS: freebsd
        GOARCH: "{{ lookup('env', 'ARCH',) }}"

    - name: Create Directories
      ansible.builtin.file:
        path: "{{ gh_ws }}/dist/pkg/opt/{{ item }}"
        state: directory
        recurse: true
        mode: '0755'
      loop:
        - '{{ pkg_name }}'
        - 'bin'

    - name: Copy Binary
      ansible.builtin.copy:
        src: "{{ gh_ws }}/src/{{ pkg_name }}"
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/{{ pkg_name }}"
        remote_src: true
        mode: '0755'

    - name: Create relative symbolic link
      ansible.builtin.command: ln -s ../{{ pkg_name }}/{{ pkg_name }} {{ pkg_name }}
      args:
        chdir: '{{ gh_ws }}/dist/pkg/opt/bin'
        creates: '{{ gh_ws }}/dist/pkg/opt/bin/{{ pkg_name }}'

    - name: Copy License
      ansible.builtin.copy:
        src: "{{ gh_ws }}/src/LICENSE"
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/LICENSE"
        remote_src: true
        mode: '0644'

    - name: Provide a link to the Source Code
      ansible.builtin.copy:
        content: |
          This software is licensed under the MIT license.
          You may obtain a copy of the source code at:
          https://github.com/{{ repo }}/archive/refs/tags/{{ latest_release.stdout }}.tar.gz
        dest: "{{ gh_ws }}/dist/pkg/opt/{{ pkg_name }}/SOURCE"
        mode: '0644'

    - name: Create Manifest
      ansible.builtin.shell:
        cmd: |
          pkg-tool create-manifest {{ config }} \
            --abi ${ABI} --arch ${ARCH}
        chdir: "{{ gh_ws }}/dist/"
        creates: "{{ gh_ws }}/dist/+MANIFEST"

    - name: Create PKG # noqa: command-instead-of-module
      ansible.builtin.shell: # noqa: risky-shell-pipe
        cmd: |
          tar -cf {{ pkg_name }}-{{ latest_release.stdout[1:] }}.pkg \
            --zstd \
            --owner=0 \
            --group=0 \
            --transform 's|^pkg||' \
            +COMPACT_MANIFEST +MANIFEST $(find pkg -type f)  $(find pkg -type l)
        chdir: "{{ gh_ws }}/dist"
        creates: "{{ gh_ws }}/dist/{{ pkg_name }}-{{ latest_release.stdout[1:] }}.pkg"

    - name: Create Packagesite Info
      ansible.builtin.shell:
        cmd: |
          pkg-tool create-packagesite-info ./+COMPACT_MANIFEST
        chdir: "{{ gh_ws }}/dist"
        creates: "{{ gh_ws }}/dist/packagesite_info.json"

    - name: Remove intermediate PKG Folder
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ gh_ws }}/dist/+MANIFEST"
        - "{{ gh_ws }}/dist/+COMPACT_MANIFEST"
        - "{{ gh_ws }}/dist/pkg"
